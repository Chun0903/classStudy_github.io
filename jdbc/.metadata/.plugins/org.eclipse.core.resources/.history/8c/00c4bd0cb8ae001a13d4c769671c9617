package com.test.project;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;

import oracle.jdbc.OracleTypes;

public class project_1 {
	
	//스캐너
	static Scanner scan = new Scanner(System.in);
	
	//개설과정 번호 리스트
	static ArrayList<String> ocseq = new ArrayList<String>();
	//교사 번호 리스트
	static ArrayList<String> tseq = new ArrayList<String>();
	//강의가능과목 리스트
	static ArrayList<String> tPname = new ArrayList<String>();
	//과목 리스트
	static ArrayList<String> sname = new ArrayList<String>();
	
//	String teacherSeq = TLogin.tseqLogin.get(0);
	
//	static ArrayList<String> tseqLogin = new ArrayList<String>();
//	
	public static void main(String[] args) {
//		
//		home();
//				
//		
//		//교사
//		TLogin Tlogin = new TLogin();	//메소드 재 선언
//		Tlogin.tLogin();				//메소드 불러오기
//		T_schedule();	//강의스케줄 조회 > 상세 정보 > 수강생 목록 조회
//		
//		//관리자
		A_tinfo();
//		
//		//설문
//		A_insentive();
//		
//		System.out.println(1);
//		
	}//메인
	
	public static void A_insentive() {
		
		System.out.println();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "<교사 인센티브 관리>");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		System.out.println();
		System.out.println("\t\t\t1. 인센티브 관리");
		System.out.println("\t\t\t2. 개설 과정별 설문 내용 조회");
		System.out.println("\n");
		System.out.println("\t\t\ta. 뒤로가기");
		System.out.println("\t\t\tb. 처음으로가기");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.print("\t\t\t입력 : ");
		
		String num = scan.nextLine();
		
		
		if(num.equals("1")) {

			insentive(); //교사월급 조회 > 인센티브 주기
	
		}else if(num.equals("2")) {
			
			surveyOpenclass(); //개설과정 조회 > 과정+설문내용

		}else if(num.equals("a")) {
			//joo_뒤로가기 만들기
			AdminMainPage adminMainPage = new AdminMainPage();
			adminMainPage.adminMain();
			
		}else if(num.equals("b")) {
			home();
		}else {
			System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			A_insentive();
		}
		
		
	}
	
	public static void A_tinfo() {

		System.out.println();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "<교사 계정관리>");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		//교사 정보 리스트
		tlist();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "1.강의 가능 목록");
		System.out.println("\t\t\t" + "2.교사 정보 등록");
		System.out.println("\t\t\t" + "3.교사 정보 수정");
		System.out.println("\t\t\t" + "4.교사 정보 삭제");
		System.out.println("\t\t\t" + "5.정보 상세보기");
		System.out.println("\n");
		System.out.println("\t\t\t" + "a. 뒤로가기");
		System.out.println("\t\t\t" + "b. 처음으로가기");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.print("\t\t\t입력 : ");
		String teacherSeq = scan.nextLine();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");		
		
		if(teacherSeq.equals("1")) {
			//강의 가능 목록 보기
			
			T_possible();
//			t_possible();
			
		} else if(teacherSeq.equals("2")) {
			//정보 등록
			InforInsert();
		} else if(teacherSeq.equals("3")) {
			//정보 수정
			InfoUpdateT();
		} else if(teacherSeq.equals("4")) {
			//정보 삭제
			InforDelete();
		} else if(teacherSeq.equals("5")) {
			//정보 상세보기
			T_seukejul();
		} else if(teacherSeq.equals("a")) {
			//뒤로 가기
			//joo_뒤로가기 추가하기
			AdminMainPage adminMainPage = new AdminMainPage();
			adminMainPage.adminMain();

		} else if(teacherSeq.equals("b")) {
			//처음으로 가기
			home();
			
		} else {
			System.out.println("잘못된 입력입니다. 다시 입력하세요.");
			A_tinfo();
		}
		
	}
	
	
	private static void T_seukejul() {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();
		
		
		System.out.println("\t\t\ta. 뒤로가기");
		System.out.println("\t\t\tb. 처음으로 가기");
		System.out.println("\n");
		System.out.print("\t\t\t상세 정보를 볼 교사의 번호를 입력해주세요 : ");
		String teacherSeq = scan.nextLine();

		if(tseq.contains(teacherSeq)) {
			
			try {
				System.out.println();
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.println("\t\t\t<정보 상세보기>"+ "\n");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
					
				conn = util.open("211.63.89.59","project","java1234");
					
				String sql = "";
					
				//과정
				CallableStatement stat0 = null;
				ResultSet rs0 = null;
		
				sql = "{ call procTScadualInfoClass(?,?) }";
				stat0 = conn.prepareCall(sql);
					
				stat0.setString(1, teacherSeq);
				stat0.registerOutParameter(2, OracleTypes.CURSOR);
					
				stat0.executeQuery();
					
				rs0 = (ResultSet)stat0.getObject(2);
					
				while (rs0.next()) {
					System.out.printf("\t\t\t[과정번호] : %s\n\t\t\t[과정이름] : %s\n\t\t\t[과정기간] : %s ~ %s\n\t\t\t[ 강의실 ] : %s\n"
							,rs0.getString("cseq")
							,rs0.getString("cname")
							,rs0.getString("ocStartdate")
							,rs0.getString("ocEnddate")
							,rs0.getString("rname"));
				}
		
				rs0.close();
				stat0.close();
				System.out.println("\t\t\t" + "-------------------------------------------------------------------------------------------------------------------------------------------------------");
		
				//과목
				System.out.println("\t\t\t[과목번호]\t[과목명]\t\t\t[과목기간(시작 - 끝)]\t\t\t\t[교재명]\t\t\t\t\t\t\t[진행여부]");
					
				sql = "{ call procTCTInfo(?,?) }";
				stat = conn.prepareCall(sql);
					
				stat.setString(1, teacherSeq);
				stat.registerOutParameter(2, OracleTypes.CURSOR);
					
				stat.executeQuery();
					
				rs = (ResultSet)stat.getObject(2);
					
					while (rs.next()) {
						System.out.printf("\t\t\t%s\t%s\t%s - %s\t\t%s\t%s\n"
								,rs.getString("sseq")
								,rs.getString("sname")
								,rs.getString("osStartdate")
								,rs.getString("osEnddate")
								,rs.getString("bname")
								,rs.getString("subjecProgress"));
					}
		
					stat.close();
					conn.close();
		
			} catch (Exception e) {
				e.printStackTrace();
			}
				
			while(true) {

				System.out.println();
				System.out.println("\t\t\t" + "a. 뒤로가기");
				System.out.println("\t\t\t" + "b. 처음으로가기");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.print("\t\t\t입력 : ");
					
				String backHome = scan.nextLine();
					
				if(backHome.equals("a")) {
					A_tinfo();
					break;

				} else if(backHome.equals("b")) {
						
					home();
					break;
						
				} else {
						
					System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			
				}
			}

				
		}else if(teacherSeq.equals("a")) {
			A_tinfo();
		}else if(teacherSeq.equals("b")) {
			home();	
		}else {
			System.out.println();
			System.out.println("\t\t\t" + "존재하지 않는 교사입니다. 다시입력하세요");
			T_seukejul();
		}
		
	}
	private static void T_possible() {
		
		System.out.println();
		System.out.println("\t\t\t1. 강의 가능 목록 전체 보기");
		System.out.println("\t\t\t2. 강의 가능 목록 교사별 추가");
		System.out.println("\n");
		System.out.println("\t\t\ta. 뒤로가기");
		System.out.println("\t\t\tb. 처음으로 가기");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.print("\t\t\t입력 : ");
		
		String choise = scan.nextLine();
		
		if(choise.equals("1")) {
			T_possibleList();
		}else if(choise.equals("2")) {
			t_possiblePlus();
		}else if(choise.equals("a")) {
			A_tinfo();
		}else if(choise.equals("b")) {
			home();
		}else {
			System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			T_possible();
		}
		
		
	}

	private static void T_possibleList() {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();

		try {
			String  sql = "";
			
			//교사 정보 출력
			sql = "{ call procTInfor(?) }";
			
			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.prepareCall(sql);
			
			stat.registerOutParameter(1, OracleTypes.CURSOR);
			
			stat.executeQuery();
			
			rs = (ResultSet)stat.getObject(1);
			System.out.println();
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.println("\t\t\t<교사 강의가능 목록>");
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			//			System.out.println("[번호]\t[이름]\t[주민번호 뒷자리]\t[전화번호]");
			while (rs.next()) {
				System.out.println("\t\t\t-교사정보-");
				System.out.printf("\n\t\t\t[번호] : %s\n\t\t\t[이름] : %s\n\t\t\t[주민번호 뒷자리] : %s\n\t\t\t[전화번호] : %s\n"
						,rs.getString("seq")
						,rs.getString("name")
						,rs.getString("pw")
						,rs.getString("tel"));
				System.out.println("\t\t\t-------------------------------------------");
				
				//강의 가능과목 출력
				CallableStatement stat2 = null;
				ResultSet rs2 = null;
				
				sql = "{ call procTInforSubject(?,?) }";
				
				stat2 = conn.prepareCall(sql);
				
				stat2.setString(1, rs.getString("seq"));
				stat2.registerOutParameter(2, OracleTypes.CURSOR);
				
				stat2.executeQuery();
				
				rs2 = (ResultSet)stat2.getObject(2);
				
				System.out.println("\t\t\t-강의가능 목록-");
				System.out.println("\t\t\t[과목번호]\t[과목명]");
				
				while (rs2.next()) {
					System.out.printf("\t\t\t%s\t%s\n"
							,rs2.getString("sseq")
							,rs2.getString("sname"));
				}
				
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				
				rs2.close();
				stat2.close();
				
				System.out.println();
//				System.out.println("\t\t\t1. 교사별 강의 가능목록 추가");
				System.out.println("\t\t\t" + "a. 뒤로가기");
				System.out.println("\t\t\t" + "b. 처음으로가기");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.print("\t\t\t입력 : ");
				
				String possiblePlus = scan.nextLine();
				
//				if(possiblePlus.equals("1")) {
//					tlist();
//					t_possible();
//					
//				} else if(possiblePlus.equals("a")) {
				if(possiblePlus.equals("a")) {
					T_possible();
					break;
					
					
					
				} else if(possiblePlus.equals("b")) {
					
					home();
					break;
					
				} else {
					
					System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
		
				}

				
			}
			
			rs.close();
			stat.close();
			conn.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}


	private static void t_possiblePlus() {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();
		
		try {
			
			String sql = "";
			sql = "{ call procTInforSubject(?,?) }";
			
			//교사 번호 입력
			System.out.println();
			System.out.println("\t\t\ta. 뒤로가기");
			System.out.println("\t\t\tb. 처음으로가기");
			System.out.println("\t\t\t강의 가능 목록을 추가하고 싶은 교사의 번호를 입력하세요.");
			System.out.println("\t\t\t" + "==============================================================");
			System.out.print("\t\t\t입력 : ");
			String teacherSeq = scan.nextLine();
			
			if(tseq.contains(teacherSeq)) {
			
				conn = util.open("211.63.89.59","project","java1234");
				stat = conn.prepareCall(sql);
				
				stat.setString(1, teacherSeq);
				stat.registerOutParameter(2, OracleTypes.CURSOR);
				
				stat.executeQuery();
				
				rs = (ResultSet)stat.getObject(2);
				
				System.out.println();


				System.out.println("\t\t\t" + "--------------------------------------------------------------");
				System.out.printf("\t\t\t- [%s번] 교사의 강의 가능과목 -\n",teacherSeq);
				System.out.println("\t\t\t" + "--------------------------------------------------------------");
				System.out.println();
				System.out.println("\t\t\t[과목 번호]\t[과목명]");
				
				while (rs.next()) {
					System.out.printf("\t\t\t%s\t%s\n"
							,rs.getString("sseq")
							,rs.getString("sname"));
					tPname.add(rs.getString("sname"));
				}
				
				conn.close();
				stat.close();
				
				//전체 과목 목록
				subjectList();
				
				//추가
				subPlus(teacherSeq);
			
				
				
				
			}else if(teacherSeq.equals("a")) {
				T_possible();
			}else if(teacherSeq.equals("b")) {
				
				home();
				
			}else {
				System.out.println("\t\t\t" + "존재하지 않는 교사입니다. 다시입력하세요");
				t_possiblePlus();
			}
			
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		
	}

	private static void subPlus(String teacherSeq) {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();
		
		try {
			
			String sql = "";
			sql = "{ call procTPossibleInsert(?,?) }";
			
			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.prepareCall(sql);

			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.println("\t\t\ta. 뒤로가기");
			System.out.println("\t\t\tb. 처음으로가기");
			System.out.println("\n");
			System.out.println("\t\t\t추가할 과목의 이름을 입력해주세요");
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.print("\t\t\t입력 : ");
			String name = scan.nextLine();
				
			stat = conn.prepareCall(sql);
			
			stat.setString(1, teacherSeq);
			stat.setString(2, name);
			
			if(sname.contains(name)) {
				
				if(tPname.contains(name)) {
					System.out.println();
					System.out.println("\t\t\t" + "이미 있는 과목입니다. 다시입력하세요");
					subPlus(teacherSeq);
					
				}else if(name.equals("a")) {
					t_possiblePlus();
				}else if(name.equals("b")) {
					home();
				}else {
					
					sname.clear();
					tPname.clear();
					
					while(true) {
						System.out.println();

						System.out.println("\t\t\t" + "--------------------------------------------------------------");
						System.out.printf("\t\t\t%s번 교사의 강의가능목록에 %s과목을 추가하시겠습니까?\n",teacherSeq,name);
						System.out.println("\t\t\t" + "--------------------------------------------------------------");
						System.out.println("\t\t\t1. 네");
						System.out.println("\t\t\t2. 아니오");
						System.out.println("\n");
						System.out.println("\t\t\ta. 뒤로가기");
						System.out.println("\t\t\tb. 처음으로가기");
						System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
						System.out.print("\t\t\t입력 : ");
						
						String yesNo = scan.nextLine();
						
						if(yesNo.equals("1")) {
							stat.executeUpdate();
							
							System.out.println();
							System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
							System.out.println("\t\t\t추가 완료");
							System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
							
							while(true) {
							
								System.out.println("\t\t\t" + "a. 뒤로가기");
								System.out.println("\t\t\t" + "b. 처음으로가기");
								System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
								System.out.print("\t\t\t입력 : ");
								
								String backHome = scan.nextLine();
								
								if(backHome.equals("a")) {
									break;
								} else if(backHome.equals("b")) {
									home();
								} else {
									System.out.println();
									System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
									System.out.println();
								}
							}
							
							
						}else if(yesNo.equals("2")){
							subPlus(teacherSeq);
						}else if(yesNo.equals("a")){
							subPlus(teacherSeq);
						}else if(yesNo.equals("b")){
							home();
							break;
						}else {
							System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
						}
					
					}
					
					
				}
				
				
			}else if(name.equals("a")) {
				t_possiblePlus();
			}else if(name.equals("b")) {
				home();
			}else {
				System.out.println("\t\t\t" + "존재하지 않는 과목입니다. 다시입력하세요");
				subPlus(teacherSeq);
			}
	
			
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		
		
	}
	
	//지금
	private static void subjectList() {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();

		try {
			
			String sql = "";
			
			sql = "{ call procTSubAll(?) }";
			
			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.prepareCall(sql);
			
			stat.registerOutParameter(1, OracleTypes.CURSOR);
			
			stat.executeQuery();
			
			rs = (ResultSet)stat.getObject(1);
			
			System.out.println();


			System.out.println("\t\t\t" + "--------------------------------------------------------------");
			System.out.println("\t\t\t<과목 목록>");
			System.out.println("\t\t\t" + "--------------------------------------------------------------");
			System.out.println("\t\t\t[번호]\t[이름]");
			
			while (rs.next()) {
				System.out.printf("\t\t\t%s\t%s\n"
						,rs.getString("seq")
						,rs.getString("name"));
				sname.add(rs.getString("name"));
			}
			
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		
	}

	private static void InforDelete() {
		Connection conn = null;
		CallableStatement stat = null;
		DBUtil util = new DBUtil();

		try {
			
			//퇴사한 교사 선택
			System.out.print("\t\t\t퇴사한 교사의 번호를 선택해 주세요 : ");
			String teacherSeq = scan.nextLine();
			
			if(tseq.contains(teacherSeq)) {
			
//				while(true) {
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.printf("\t\t\t%s번 교사의 정보를 지우시겠습니까?\n",teacherSeq);
				System.out.println("\t\t\t1. 네");
				System.out.println("\t\t\t2. 아니오");
				System.out.println("\n");
				System.out.println("\t\t\ta. 뒤로가기");
				System.out.println("\t\t\tb. 처음으로가기");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.print("\t\t\t입력 : ");
				
				String yesNo = scan.nextLine();
//				
					if(yesNo.equals("1")) {
					
					conn = util.open("211.63.89.59","project","java1234");
					String sql = "";
					
					sql = "{ call procTInfordelete(?) }";
					
					stat = conn.prepareCall(sql);
					
					stat.setString(1, teacherSeq);
					
					stat.executeUpdate();
					
					System.out.println();
					System.out.printf("\t\t\t>>%s번 교사 퇴사 완료", teacherSeq);
					
					stat.close();
					conn.close();
					
							System.out.println();
					
							while(true) {
								
								System.out.println("\t\t\t" + "a. 뒤로가기");
								System.out.println("\t\t\t" + "b. 처음으로가기");
								System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
								System.out.print("\t\t\t입력 : ");
								
								String backHome = scan.nextLine();
								
								if(backHome.equals("a")) {
									InforDelete();
									break;
									
									
									
								} else if(backHome.equals("b")) {
									
									home();
									break;
									
								} else {
									
									System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
						
								}
							}
				
					
					}else if(yesNo.equals("2")) {
						InforDelete();
					}else if(yesNo.equals("a")) {
						A_tinfo();
					}else if(yesNo.equals("b")) {
						home();
					}else{
						System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
						InforDelete();
					}
			
			}else {
				System.out.println("\t\t\t" + "존재하지 않는 교사입니다. 다시입력하세요");
				InforDelete();
			}	
		
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	
		
	}


	private static void InforInsert() {
		Connection conn = null;
		CallableStatement stat = null;
//		ResultSet rs = null;
		DBUtil util = new DBUtil();
//		Scanner scan = new Scanner(System.in);

		try {
			System.out.println();
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.println("\t\t\t" + "<교사 정보 등록>");
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.println();
			System.out.println("\t\t\t등록할 정보를 입력해 주세요");
			System.out.print("\t\t\t이름 : ");
			String teacherName = scan.nextLine();
			System.out.print("\t\t\t전화번호 : ");
			String teacherTel = scan.nextLine();
			System.out.print("\t\t\t아이디: ");
			String teacherId = scan.nextLine();
			System.out.print("\t\t\t비밀번호(주민번호 뒷자리) : ");
			String teacherPw = scan.nextLine();
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			
			System.out.println("\t\t\t등록하시겠습니까?");
			System.out.println("\t\t\t1. 네");
			System.out.println("\t\t\t2. 아니오");
			System.out.println("\n");
			System.out.println("\t\t\ta. 뒤로가기");
			System.out.println("\t\t\tb. 처음으로 가기");
			System.out.print("\t\t\t입력 : ");
			String yesNo = scan.nextLine();
			
			if(yesNo.equals("1")) {	
			
			String sql = "";
			
			//교사 등록
			sql = "{ call procTInforInsert(?,?,?,?) }";

			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.prepareCall(sql);
			
			stat.setString(1, teacherName);
			stat.setString(2, teacherTel);
			stat.setString(3, teacherId);
			stat.setString(4, teacherPw);

			
			stat.executeUpdate();
			
			System.out.println("\t\t\t등록 완료");
			
			stat.close();
			conn.close();
			}else if(yesNo.equals("2")) {
				InforInsert();
			}else if(yesNo.equals("a")) {
				A_tinfo();
			}else if(yesNo.equals("b")) {
				home();
			} else {
				System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
				InforInsert();
			}
			
		} catch (Exception e) {
			System.out.println("\t\t\t등록실패");
			e.printStackTrace();
		}
		
	}


	private static void InfoUpdateT() {
		System.out.println();
		
		System.out.println("\t\t\ta. 뒤로가기");
		System.out.println("\t\t\tb. 처음르로 가기");
		System.out.println();
		System.out.println();
		System.out.print("\t\t\t정보를 수정할 교사 번호 입력 : ");
		String teacherSeq = scan.nextLine();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
//		InforUpdateNum(teacherSeq);
		
		if(tseq.contains(teacherSeq)) {
			
		tInfoUpdate(teacherSeq);
		
		}else if (teacherSeq.equals("a")) {
			//뒤로가기
			A_tinfo();
		} else if (teacherSeq.equals("b")) {
			//처음으로 가기
			home();
		} else {
			System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			InfoUpdateT();
		}
		
		
		
	}
	
//	private static void InforUpdateNum(String teacherSeq) {
//		
//		if(tseq.contains(teacherSeq)) {
//		
//		System.out.printf("\n<%s번 교사의 정보를 수정합니다.>\n\n", teacherSeq);
//		
//		System.out.println("1. 이름수정 \n2. 비밀번호 수정 \n3. 전화번호 수정\n4. 전체수정"
//				+ "\na. 뒤로가기\nb. 처음으로 가기");
//		System.out.println();
//		System.out.println("수정할 정보의 숫자를 입력해주세요");
//		System.out.print("입력 : ");
//		
//		String updateNum = scan.nextLine();
//		
//		System.out.println();
//		} else if (teacherSeq.equals("a")) {
//			//뒤로가기
//			InfoUpdateT();
//		} else if (teacherSeq.equals("b")) {
//			//처음으로 가기
//			home();
//		}
//	}
	
//	private static void tInfoUpdate(String teacherSeq, String updateNum) {
	private static void tInfoUpdate(String teacherSeq) {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();
//		Scanner scan = new Scanner(System.in);

		try {
			String  sql = "";
			
//			System.out.println("테스트");
//			while(true) {

//				conn = util.open();
			// 교사 번호 선택 > 출력
			// 이름, 전화번호, 비밀번호 업데이트

//			System.out.println();
//			
//			System.out.println("a. 뒤로가기");
//			System.out.println("b. 처음르로 가기");
//			System.out.println();
//			System.out.println();
//			System.out.print("정보를 수정할 교사 번호 입력 : ");
//			String tseq = scan.nextLine();

		
			for(int i=0;;i++) {
			System.out.printf("\n\t\t\t<%s번 교사의 정보를 수정합니다.>\n\n", teacherSeq);
			
			System.out.println("\t\t\t1. 이름수정 \n\t\t\t2. 비밀번호 수정 \n\t\t\t3. 전화번호 수정\n\t\t\t4. 전체수정"
					+ "\n\n\n\t\t\ta. 뒤로가기\n\t\t\tb. 처음으로 가기");

//			System.out.println("수정할 정보의 숫자를 입력해주세요");
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.print("\t\t\t입력 : ");
			String updateNum = scan.nextLine();
			System.out.println();
			
			for(int j=0;;j++) {
			
				if(updateNum.equals("1")) {
					scan = new Scanner(System.in);
					System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
					System.out.println("\t\t\t<이름 수정>");
					System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
					System.out.println();
					System.out.println("\t\t\ta. 뒤로가기");
					System.out.println("\t\t\tb. 처음으로 가기");
					System.out.println("\n");
					System.out.println("\t\t\t수정할 이름을 입력해주세요");
					System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
					System.out.print("\t\t\t입력 : ");
					String name = scan.nextLine();
					
//					for(int k =0;;k++) {
						
						if(name.equals("a")) {
							break;
						}else if(name.equals("b")) {
							home();
						}else {
						
							//유효성 검사
							//빈 값 사용 여부 확인
							
							
							//검사 통과
							sql = "{ call procTInforUpdateName(?,?) }";
							
							conn = util.open("211.63.89.59","project","java1234");
							stat = conn.prepareCall(sql);
							
							stat.setString(1, teacherSeq);
							stat.setString(2, name);
							
							stat.executeUpdate();
							
							stat.close();
							System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
							System.out.println();
							System.out.println("\t\t\t이름 수정이 완료되었습니다.");
							System.out.println();
							
							conn.close();
							stat.close();
						
							while(true) {
								System.out.println("\t\t\t" + "a. 뒤로가기");
								System.out.println("\t\t\t" + "b. 처음으로가기");
								System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
								System.out.print("\t\t\t입력 : ");
								
								String backHome = scan.nextLine();
								
								if(backHome.equals("a")) {
									
			//						InforUpdateNum(teacherSeq);
									break;
									
									
								} else if(backHome.equals("b")) {
									
									home();
									break;
									
								} else {
									
									System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
						
								}		
	
							}
				}
				

				
			} else if(updateNum.equals("2")) {
				scan = new Scanner(System.in);
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.println("\t\t\t<비밀번호 수정>");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.println();
				System.out.println("\t\t\ta. 뒤로가기");
				System.out.println("\t\t\tb. 처음으로 가기");
				System.out.println("\n");
				System.out.println("\t\t\t수정할 비밀번호를 입력해주세요");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.print("\t\t\t입력 : ");
				String pw = scan.nextLine();
				
					if(pw.equals("a")) {
						break;
					}else if(pw.equals("b")) {
						home();
					}else {
				
						sql = "{ call procTInforUpdatePw(?,?) }";
						conn = util.open("211.63.89.59","project","java1234");
						stat = conn.prepareCall(sql);
						
						stat.setString(1, teacherSeq);
						stat.setString(2, pw);
						
						stat.executeUpdate();
						
						conn.close();
						stat.close();
						System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
						System.out.println("\t\t\t비밀번호 수정이 완료되었습니다.");
						System.out.println();
						
						while(true) {
							
							
							System.out.println("\t\t\t" + "a. 뒤로가기");
							System.out.println("\t\t\t" + "b. 처음으로가기");
							System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
							System.out.print("\t\t\t입력 : ");
							
							String backHome = scan.nextLine();
							
							if(backHome.equals("a")) {
								
								break;
								
								
								
							} else if(backHome.equals("b")) {
								
								home();
								break;
								
							} else {
								
								System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
					
							}
						}
					}
						
						
			} else if(updateNum.equals("3")) {
				
				scan = new Scanner(System.in);
				scan = new Scanner(System.in);
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.println("\t\t\t<전화번호 수정>");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.println();
				System.out.println("\t\t\ta. 뒤로가기");
				System.out.println("\t\t\tb. 처음으로 가기");
				System.out.println("\n");
				System.out.println("\t\t\t수정할 전화번호를 입력해주세요");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.print("\t\t\t입력 : ");
				String tel = scan.nextLine();
				
					if(tel.equals("a")) {
						break;
					}else if(tel.equals("b")) {
						home();
						
					}else {
				
						sql = "{ call procTInforUpdateTel(?,?) }";
						
						conn = util.open("211.63.89.59","project","java1234");
						stat = conn.prepareCall(sql);
						
						stat.setString(1, teacherSeq);
						stat.setString(2, tel);
						
						stat.executeUpdate();
						
						conn.close();
						stat.close();
						
						System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
						System.out.println();
						System.out.println("\t\t\t전화번호 수정이 완료되었습니다.");
						System.out.println();
						
							while(true) {
								System.out.println("\t\t\t" + "a. 뒤로가기");
								System.out.println("\t\t\t" + "b. 처음으로가기");
								System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
								System.out.print("\t\t\t입력 : ");
								
								String backHome = scan.nextLine();
								
								if(backHome.equals("a")) {
									
	
									break;
									
									
								} else if(backHome.equals("b")) {
									
									home();
									break;
									
								} else {
									
									System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
						
								}
	
							}
					}
					
			} else if(updateNum.equals("4")) {
				scan = new Scanner(System.in);
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.println("\t\t\t<전체 수정>");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				System.out.println();
				System.out.println("\t\t\ta. 뒤로가기");
				System.out.println("\t\t\tb. 처음으로 가기");
				System.out.println("\n");
				System.out.println("\t\t\t수정할 정보를 입력해주세요");
				System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
				
				System.out.print("\t\t\t이름\t: ");
				String name = scan.nextLine();
				System.out.println("\t\t\t아이디\t: *아이디는 수정이 불가능합니다.*");
				System.out.print("\t\t\t비밀번호\t: ");
				String pw = scan.nextLine();
				System.out.print("\t\t\t전화번호\t: ");
				String tel = scan.nextLine();
				
				if(name.equals("a")) {
					break;
				}else if(name.equals("b")) {
					home();
					
				}else {
				
					sql = "{ call procTInforUpdate(?,?,?,?) }";
					
					conn = util.open("211.63.89.59","project","java1234");
					stat = conn.prepareCall(sql);
					
					stat.setString(1, teacherSeq);
					stat.setString(2, name);
					stat.setString(3, pw);
					stat.setString(4, tel);
					
					
					stat.executeUpdate();
					
					conn.close();
					stat.close();
					
					System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
					System.out.println();
					System.out.println("\t\t\t수정이 완료되었습니다.");
					System.out.println();
					
					while(true) {
						System.out.println("\t\t\t" + "a. 뒤로가기");
						System.out.println("\t\t\t" + "b. 처음으로가기");
						System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
						System.out.print("\t\t\t입력 : ");
						
						String backHome = scan.nextLine();
						
						if(backHome.equals("a")) {
							

							break;
							
							
						} else if(backHome.equals("b")) {
							
							home();
							break;
							
						} else {
							
							System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
				
						}
					}
		}
				
				
			} else if(updateNum.equals("a")) {
//				A_tinfo();
//				InfoUpdateT();
				InfoUpdateT();
				break;
				
			} else if(updateNum.equals("b")){
				home();
				
			}
			else {

				System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
				A_tinfo();
			}
			
			
			
			conn.close();
				}//수정선택
			}//교사번호 입력
//			}//while
		
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	
	private static void tlist() {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();		
		
		try {
			//리스트 생성
			
			//프로시저 부르기
			String sql = "{ call procTInfor(?) }";

			//open
			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.prepareCall(sql);
			
			//커서부르기
			stat.registerOutParameter(1, OracleTypes.CURSOR);
			
			//출력요청
			stat.executeQuery();
			
			//출력값 담기
			rs = (ResultSet)stat.getObject(1);
			
			System.out.println();
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.println("\t\t\t" + "<교사 목록>");
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			//			System.out.println("\t\t\t<교사 정보>");
			
			System.out.println("\t\t\t[번호]\t[이름]\t[아이디]\t\t[비밀번호]\t[전화번호]");
			
			//출력
			while (rs.next()) {
				System.out.println("\t\t\t--------------------------------------------------------------");
				System.out.printf("\t\t\t%s\t%s\t%s\t%s\t\t%s\n"
						,rs.getString("seq")
						,rs.getString("name")
						,rs.getString("id")
						,rs.getString("pw")
						,rs.getString("tel"));
				tseq.add(rs.getString("seq"));
			}

			//close
			rs.close();
			stat.close();
			conn.close();


		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	
	//=====================================================================================================================

	
	public static void T_schedule() {
		Scanner scan = new Scanner(System.in);
		
		
		System.out.println();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "<강의 스케줄>");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		T_001();
		
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "1. 강의스케줄 정보");
		System.out.println();
		System.out.println();
		System.out.println("\t\t\t" + "a. 뒤로가기");
		System.out.println("\t\t\t" + "b. 처음으로 가기");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.print("\t\t\t" + "입력 : ");
		String input = scan.nextLine();
		System.out.println();
		
		if (input.equals("1")) {
			
			//강의스케줄 정보
			T_schedule_info();
			
		} else if(input.equals("a")) {
			T_schedule();
		} else if(input.equals("b")) {
			home();
		} else {
			System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			T_schedule();
		}
		
		
	}

	private static void T_schedule_info() {
		Scanner scan = new Scanner(System.in);
		System.out.println();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "<강의 스케줄 정보 조회>");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		T_002();

		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		System.out.println("\t\t\t" + "1.수강생 목록 조회");
		System.out.println();
		System.out.println();
		System.out.println("\t\t\t" + "a. 뒤로가기");
		System.out.println("\t\t\t" + "b. 처음으로 가기");

		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.print("\t\t\t" + "입력 : ");
		String input = scan.nextLine();
		System.out.println();
		
		if (input.equals("1")) {	
			T_schedule_info_Student();
		} else if(input.equals("a")) {
			T_schedule();
		} else if(input.equals("b")) {
			home();
		} else {
			System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			T_schedule_info();
		}
	}

		private static void T_schedule_info_Student() {
		Scanner scan = new Scanner(System.in);
		System.out.println();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "<수강생 목록 조회>");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		T_003();

		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		System.out.println("\t\t\t" + "a. 뒤로가기");
		System.out.println("\t\t\t" + "b. 처음으로 가기");
		
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.print("\t\t\t" + "입력 : ");
		String input = scan.nextLine();
		System.out.println();
		
		if (input.equals("a")) {
			T_schedule_info();		
		} else if(input.equals("b")) {
			home();
		} else {
			System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			T_schedule_info_Student();
		}
	}
	
	private static void T_003() {
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();

		try {
			conn = util.open("211.63.89.59","project","java1234");
			String sql = "";

			sql = "{ call procTSubStInfo(?,?) }";
			
			//joo_로그인 받아오기
			String teacherSeq = TLogin.tseqLogin.get(0);


			stat = conn.prepareCall(sql);
			
			stat.setString(1, teacherSeq);
			stat.registerOutParameter(2, OracleTypes.CURSOR);
			
			stat.executeQuery();
			
			rs = (ResultSet)stat.getObject(2);
			
			System.out.println("\t\t\t" + "<교육생 정보>"+ "\n");
			System.out.println("\t\t\t" + "[이름]\t[전화번호]\t\t[등록일]\t\t[수료여부]");
			while (rs.next()) {
				System.out.printf("\t\t\t" + "%s\t%s\t%s\t%s\n"
						,rs.getString("name")
						,rs.getString("tel")
						,rs.getString("regdate")
						,rs.getString("complet"));
			}

			stat.close();
			conn.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	private static void T_002() {
		
		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();
		
		
		//교사 번호 -> 로그인에서 받아오기!!!
		String teacherSeq = TLogin.tseqLogin.get(0);
		
		
		try {
	
			conn = util.open("211.63.89.59","project","java1234");
			
			String sql = "";
			
			//과정
			CallableStatement stat0 = null;
			ResultSet rs0 = null;

			sql = "{ call procTScadualInfoClass(?,?) }";
			stat0 = conn.prepareCall(sql);
			
			stat0.setString(1, teacherSeq);
			stat0.registerOutParameter(2, OracleTypes.CURSOR);
			
			stat0.executeQuery();
			
			rs0 = (ResultSet)stat0.getObject(2);
			
			while (rs0.next()) {
				System.out.printf("\t\t\t" + "[과정번호] : %s\n\t\t\t[과정이름] : %s\n\t\t\t[과정기간] : %s ~ %s\n\t\t\t[ 강의실 ] : %s\n"
						,rs0.getString("cseq")
						,rs0.getString("cname")
						,rs0.getString("ocStartdate")
						,rs0.getString("ocEnddate")
						,rs0.getString("rname"));
			}

			rs0.close();
			stat0.close();
			
			//인원수
			Statement stat1 = null;
			ResultSet rs1 = null;
			
			stat1 = conn.createStatement();
			
			sql = "select count(*) as cnt from vwTScadualInfo where tseq = "+teacherSeq;
			
			rs1 = stat1.executeQuery(sql);
			
			if(rs1.next()) {
				System.out.println("\t\t\t" + "[ 인원수 ] : " + rs1.getString("cnt") + "명");
				System.out.println();
			}
			
			rs1.close();
			stat1.close();
			
			
			//과목
			System.out.println("\t\t\t" + "[과목번호]\t[과목명]\t\t\t[과목기간(시작 - 끝)]\t\t\t[교재명]");
			
			sql = "{ call procTScadualInfo(?,?) }";
			stat = conn.prepareCall(sql);
			
			stat.setString(1, teacherSeq);
			stat.registerOutParameter(2, OracleTypes.CURSOR);
			
			stat.executeQuery();
			
			rs = (ResultSet)stat.getObject(2);
			
			while (rs.next()) {
				System.out.printf("\t\t\t" + "%s\t%s\t%s - %s\t\t%s\n"
						,rs.getString("sseq")
						,rs.getString("sname")
						,rs.getString("osStartdate")
						,rs.getString("osEnddate")
						,rs.getString("bname"));
			}

			stat.close();
			conn.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	private static void T_001() {

		Connection conn = null;
		CallableStatement stat = null;
		ResultSet rs = null;
		DBUtil util = new DBUtil();

		try {
			String sql = "{ call procTScadual(?,?) }";
			String teacherSeq = TLogin.tseqLogin.get(0);

			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.prepareCall(sql);
			
			stat.setString(1, teacherSeq);
			stat.registerOutParameter(2, OracleTypes.CURSOR);
			
			stat.executeQuery();
			
			rs = (ResultSet)stat.getObject(2);
			

			System.out.println("\t\t\t" + "[과목명]" + "\t\t\t\t" + "[진행여부]");
			while (rs.next()) {
				System.out.printf("\t\t\t" + "%s\t\t%s\n"
						,rs.getString("name")
						,rs.getString("subjecProgress"));
			}

			rs.close();
			stat.close();
			conn.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	//=====================================================================================================================

	private static void insentive() {
		
		//교사 월급 목록
		tSalary();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "a. 뒤로가기");
		System.out.println("\t\t\t" + "b. 처음으로가기");
		System.out.println("\n");
		System.out.print("\t\t\t" +"인센티브를 줄 교사 번호를 입력해주세요 : ");
		String teacherSeq =  scan.nextLine();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		
		if(tseq.contains(teacherSeq)) {
			
			//인센티브 지급
			insentiveUpdate(teacherSeq);
			
			System.out.println("\t\t\t" + "a. 뒤로가기");
			System.out.println("\t\t\t" + "b. 처음으로가기");
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.print("\t\t\t입력 : ");
			
			String backHome = scan.nextLine();
			
			if(backHome.equals("a")) {
				//joo
				insentive();
				
				
			} else if(backHome.equals("b")) {
				
				home();
				
			} else {
				
				System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
				System.out.println();
				
				insentive();
			}
			

			
		}else if(teacherSeq.equals("a")) {
			
			A_insentive();
			
		}else if(teacherSeq.equals("b")) {
			
			home();
			
		}else {

			System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
			insentive();
		}
		
	}

	private static void insentiveUpdate(String teacherSeq) {

		try {
			
		Connection conn = null;
		CallableStatement stat = null;
		DBUtil util = new DBUtil();

			String sql = "";
			sql = "{ call procIncentiveUpdate(?) }";
			
			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.prepareCall(sql);
			
			stat.setString(1, teacherSeq);
			
			stat.executeUpdate();
			
			System.out.println();
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.printf("\t\t\t%s번 교사 인센티브 지급 완료\n", teacherSeq);
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			
			stat.close();
			conn.close();
		
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		
	}

	private static void tSalary() {
		Connection conn = null;
		Statement stat = null;
		DBUtil util = new DBUtil();
		ResultSet rs = null;

		try {
			conn = util.open("211.63.89.59","project","java1234");
			String sql = "";
			
			sql = "select * from vwTSalary";
			
			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.createStatement();
			
			rs = stat.executeQuery(sql);
			
			System.out.println("\t\t\t" + "<교사 급여>");
			System.out.println("\t\t\t" + "[번호]\t[이름]\t[급여]\t  [인센티브]");
			while (rs.next()) {
				System.out.printf("\t\t\t" + "%s\t%s\t%s\t  %s\n"
								, rs.getString("seq")						
								, rs.getString("name")
								, rs.getString("salary")
								, rs.getString("incentive"));
				
				tseq.add(rs.getString("seq"));
			}
			System.out.println();
			rs.close();
			stat.close();

			} catch (Exception e) {
				// TODO: handle exception
			}
		
	}

	private static void home() {
		System.out.println("홍입니다.");
		
	}

	private static void surveyOpenclass() {
//		Scanner scan = new Scanner(System.in);
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println("\t\t\t" + "<개설 과정 목록>");
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		openClassList();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		
		//과정번호 입력
		
		System.out.println("\t\t\t" + "a. 뒤로가기");
		System.out.println("\t\t\t" + "b. 처음으로가기");
		System.out.println("\n");
		System.out.print("\t\t\t" + "과정의 번호를 입력하세요: ");
		
		
		//번호 입력
		String openClassSeq = scan.nextLine();
		System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
		System.out.println();
		
		//존재하는 과정번호
		if(ocseq.contains(openClassSeq)) {
			
			openClassSurvey(openClassSeq);
			
			System.out.println("\t\t\t" + "a. 뒤로가기");
			System.out.println("\t\t\t" + "b. 처음으로가기");
			System.out.println("\t\t\t〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓");
			System.out.print("\t\t\t입력 : ");
			
			String backHome = scan.nextLine();
			
			if(backHome.equals("a")) {
				surveyOpenclass();
			} else if(backHome.equals("b")) {
				home();
			} else {
				System.out.println();
				System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
				System.out.println();
				
				openClassSurvey(openClassSeq);
			}
			
		
		}else if(openClassSeq.equals("a")) {
			
			
			A_insentive();
			
			
		}else if(openClassSeq.equals("b")) {
			
			home();
			
		}else {
	         System.out.println("\t\t\t" + "잘못된 입력입니다. 다시입력하세요");
		}
	}

	private static void openClassSurvey(String openClassSeq) {
		Connection conn = null;
		CallableStatement stat = null;
		DBUtil util = new DBUtil();
		ResultSet rs = null;
		
		
		try {
			conn = util.open("211.63.89.59","project","java1234");

			
			String sql = "";
			
			//과정 + 질문 가져오기			
			sql =  "{ call procAssClassNQ(?,?) }";
	
			stat = conn.prepareCall(sql);
			
			stat.setString(1, openClassSeq);
			stat.registerOutParameter(2, OracleTypes.CURSOR);
			
			stat.executeQuery();
			
			rs = (ResultSet)stat.getObject(2);
			
			while (rs.next()) {
				System.out.printf("\t\t\t<%s>\n\t\t\t%s.%s\n"
						,rs.getString("name")
						,rs.getString("aseq")
						,rs.getString("question"));
				
				// 과정 + 질문 <- 항목들 가져오기
				sql = "{ call procAssClassCon(?,?,?,?) }";
				
				CallableStatement stat2 = null;
				ResultSet rs2 = null;
				stat2 = conn.prepareCall(sql);
				
				stat2.setString(1, openClassSeq);
				stat2.setString(2, rs.getString("name"));
				stat2.setObject(3, rs.getString("aseq"));
				stat2.registerOutParameter(4, OracleTypes.CURSOR);
				
				stat2.executeQuery();
				
				rs2 = (ResultSet)stat2.getObject(4);
				
				while (rs2.next()) {
					System.out.println("\t\t\t" + rs2.getString("content"));
				}
				System.out.println("\t\t\t--------------------------------------------------------------");
			}
			
			
		} catch (Exception e) {
			System.out.println("AS_001()");
			e.printStackTrace();
		}
		
	}

	private static void openClassList() {
		Connection conn = null;
		Statement stat = null;
		DBUtil util = new DBUtil();
		ResultSet rs = null;		
		
		try {
			
			String sql = "";
			sql = "select DISTINCT ocseq, name from vwAssurveyClass order by ocseq";
			
			conn = util.open("211.63.89.59","project","java1234");
			stat = conn.createStatement();
			
			rs = stat.executeQuery(sql);
			
			System.out.println("\t\t\t" + "[개설 과목]");
			while (rs.next()) {
				System.out.printf("\t\t\t" + "%s. %s\n"
								, rs.getString("ocseq")						
								, rs.getString("name"));
				ocseq.add(rs.getString("ocseq"));
			}
			System.out.println();
			rs.close();
			stat.close();
			conn.close();
			
		} catch (Exception e) {
			System.out.println("AS_001()");
			e.printStackTrace();
		}
		
	}
	
}
